{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","e","key","this","props","onSubmit","onChange","react_default","a","createElement","type","value","content","className","onKeyPress","submit","bind","changeTitle","Component","TodoItem","onToggle","todo","onDelete","checked","status","toggle","title","onClick","delete","getCurrentUser","user","AV","User","current","getUserFromAVUser","AVUser","Object","objectSpread","id","attributes","init","appId","appKey","UserDialog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected","selectedState","formData","email","username","password","setState","target","_this2","preventDefault","_this$state$formData","successFn","errorFn","setUsername","setPassword","setEmail","signUp","then","loginedUser","error","onSignUp","code","alert","_this3","_this$state$formData2","logIn","signIn","onSignIn","stateCopy","JSON","parse","stringify","requestPasswordReset","success","stateTemp","signUpForm","changeFormData","signInForm","showForgotPassword","signInOrSignUp","switch","forgotPassword","resetPassword","returnToSign","App","newTodo","todoList","event","push","idMaker","deleted","logOut","todos","filter","elem","map","index","TodoItem_TodoItem","onSignOut","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","onSignUpOrSignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72f1f107.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './TodoInput.css';\r\n\r\nexport default class TodoInput extends Component{\r\n  submit(e){\r\n    if(e.key === 'Enter'){\r\n      this.props.onSubmit(e)\r\n    }\r\n  }\r\n  changeTitle(e){\r\n    this.props.onChange(e)\r\n  }\r\n  render(){\r\n    return(\r\n      <input type=\"text\" value={this.props.content}\r\n        className=\"TodoInput\"\r\n        onKeyPress={this.submit.bind(this)}\r\n        onChange={this.changeTitle.bind(this)}/>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './TodoItem.css';\r\n\r\nexport default class TodoItem extends Component{\r\n  toggle(e){\r\n    this.props.onToggle(e,this.props.todo)\r\n  }\r\n  delete(e){\r\n    this.props.onDelete(e,this.props.todo)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"TodoItem\">\r\n        <div className=\"TitleWrapper\">\r\n          <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\r\n            onChange={this.toggle.bind(this)}/>\r\n          {this.props.todo.title}\r\n        </div>\r\n        <button onClick={this.delete.bind(this)}>删除</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = 's1ANbxEGwFdBx7B6kYXKwFTS-gzGzoHsz';\r\nvar APP_KEY = 'TpqDhnKsp9JPiFy211TrVtt6';\r\n\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n});\r\n \r\nexport function signUp(email, username, password, successFn, errorFn){\r\n  // 新建 AVUser 对象实例\r\n var user = new AV.User()\r\n // 设置用户名\r\n user.setUsername(username)\r\n // 设置密码\r\n user.setPassword(password)\r\n // 设置邮箱\r\n user.setEmail(email)\r\n\r\n user.signUp().then(function (loginedUser) {\r\n   let user = getUserFromAVUser(loginedUser)\r\n   successFn.call(null, user)\r\n }, function (error) {\r\n   errorFn.call(null, error)\r\n })\r\n\r\n return undefined\r\n\r\n}\r\n\r\nexport function signIn(username, password, successFn, errorFn){\r\n  AV.User.logIn(username, password).then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n}\r\n\r\nexport function getCurrentUser(){\r\n  let user = AV.User.current()\r\n  if(user){\r\n    return getUserFromAVUser(user)\r\n  }else{\r\n    return null\r\n  }\r\n}\r\n\r\nexport function signOut(){\r\n  AV.User.logOut()\r\n  return undefined\r\n}\r\n\r\nexport function sendPasswordResetEmail(email, successFn, errorFn){\r\n  AV.User.requestPasswordReset(email).then(function (success) {\r\n    successFn.call() \r\n  }, function (error) {\r\n    errorFn(null, error)\r\n  })\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser){\r\n return {\r\n   id: AVUser.id,\r\n   ...AVUser.attributes\r\n }\r\n}","import React, {Component} from 'react';\r\nimport './UserDialog.css';\r\nimport {signUp, signIn, sendPasswordResetEmail} from './leanCloud';\r\n\r\nexport default class UserDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selected: 'signUp',\r\n      selectedState: 'signInOrSignUp',\r\n      formData: {\r\n        email: '',\r\n        username: '',\r\n        password: ''\r\n      }\r\n    }\r\n  }\r\n  switch(e){\r\n    this.setState({\r\n      selected : e.target.value\r\n    })\r\n  }\r\n  signUp(e){\r\n    e.preventDefault();\r\n    let {email,username, password} = this.state.formData\r\n    let success = (user)=>{\r\n      this.props.onSignUp.call(null,user)\r\n    }\r\n    let error = (error)=>{\r\n      switch(error.code){\r\n        case 202:\r\n          alert('用户名被占用')\r\n          break;\r\n        default: \r\n          alert(error)\r\n          break;\r\n      }\r\n    }\r\n    signUp(email,username,password,success,error)\r\n  }\r\n  signIn(e){\r\n    e.preventDefault();\r\n    let {username, password} = this.state.formData\r\n    let success = (user)=>{\r\n      this.props.onSignIn.call(null,user)\r\n    }\r\n    let error = (error)=>{\r\n      switch(error.code){\r\n        case 210:\r\n          alert('用户名与密码不匹配')\r\n          break\r\n        default:\r\n          alert(error)\r\n          break\r\n      }\r\n    }\r\n    signIn(username,password,success,error)\r\n  }\r\n  showForgotPassword(){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n    stateCopy.selectedState = 'forgotPassword'\r\n    this.setState(stateCopy)\r\n  }\r\n  returnToSign(){\r\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n    stateCopy.selectedState = 'signInOrSignUp'\r\n    this.setState(stateCopy)\r\n  }\r\n  resetPassword(e){\r\n    e.preventDefault()\r\n    sendPasswordResetEmail(this.state.formData.email)\r\n  }\r\n  changeFormData(key,e){\r\n    let stateTemp = JSON.parse(JSON.stringify(this.state))\r\n    stateTemp.formData[key] = e.target.value\r\n    this.setState(stateTemp)\r\n  }\r\n  render(){\r\n    let signUpForm = (\r\n      <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\r\n        <div className=\"row\">\r\n          <label>邮箱</label> \r\n          <input type=\"text\" value={this.state.formData.email}\r\n            onChange={this.changeFormData.bind(this, 'email')}/>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>用户名</label> \r\n          <input type=\"text\" value={this.state.formData.username}\r\n            onChange={this.changeFormData.bind(this, 'username')}/>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label>密码</label>\r\n          <input type=\"password\" value={this.state.formData.password}\r\n            onChange={this.changeFormData.bind(this, 'password')}/>\r\n        </div>\r\n        <div className=\"row actions\">\r\n          <button type=\"submit\">注册</button>\r\n        </div>\r\n      </form>\r\n    )\r\n    let signInForm = (\r\n      <form className=\"signIn\" onSubmit={this.signIn.bind(this)}> {/* 登录*/}\r\n      <div className=\"row\">\r\n        <label>用户名</label>\r\n        <input type=\"text\" value={this.state.formData.username}\r\n          onChange={this.changeFormData.bind(this, 'username')}/>\r\n      </div>\r\n      <div className=\"row\">\r\n        <label>密码</label>\r\n        <input type=\"password\" value={this.state.formData.password}\r\n          onChange={this.changeFormData.bind(this, 'password')}/>\r\n      </div>\r\n      <div className=\"row actions\">\r\n        <button type=\"submit\">登录</button>\r\n        <button onClick={this.showForgotPassword.bind(this)}>忘记密码</button>\r\n      </div>\r\n    </form>\r\n    )\r\n    let signInOrSignUp = (\r\n      <div className=\"signInOrSignUp\">\r\n        <nav>\r\n          <label>\r\n            <input type=\"radio\" value=\"signUp\" \r\n              checked={this.state.selected === 'signUp'}\r\n              onChange={this.switch.bind(this)}\r\n            />注册\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" value=\"signIn\"\r\n              checked={this.state.selected === 'signIn'}\r\n              onChange={this.switch.bind(this)}\r\n            />登录\r\n          </label>\r\n        </nav>\r\n        <div className=\"panes\">\r\n          {this.state.selected === 'signUp' ? signUpForm : null}\r\n          {this.state.selected === 'signIn' ? signInForm : null}\r\n        </div>\r\n      </div>\r\n    )\r\n    let forgotPassword = (\r\n      <div className=\"forgotPassword\">\r\n        <h3>\r\n          重置密码\r\n        </h3>\r\n        <form className=\"forgotPassword\" onSubmit={this.resetPassword.bind(this)}> {/* 登录*/}\r\n          <div className=\"row\">\r\n            <label>邮箱</label>\r\n            <input type=\"text\" value={this.state.formData.email}\r\n              onChange={this.changeFormData.bind(this, 'email')}/>\r\n          </div>\r\n          <div className=\"row actions\">\r\n            <button type=\"submit\">发送重置邮件</button>\r\n            <button onClick={this.returnToSign.bind(this)}>返回登录</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n    return (\r\n      <div className=\"UserDialog-Wrapper\">\r\n        <div className=\"UserDialog\">\r\n          {this.state.selectedState === 'signInOrSignUp' ? signInOrSignUp : forgotPassword}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css';\nimport './reset.css';\nimport TodoInput from './TodoInput';\nimport TodoItem from './TodoItem';\nimport UserDialog from './UserDialog';\nimport {getCurrentUser, signOut} from './leanCloud';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: getCurrentUser()||{},\n      newTodo: '',\n      todoList: []\n    }\n  }\n  addTodo(event){\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: '',\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  changeTitle(event){\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  toggle(event,todo){\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state)\n  }\n  delete(event,todo){\n    todo.deleted = true\n    this.setState(this.state)\n  }\n  onSignUpOrSignIn(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state)) \n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  onSignOut(){\n    signOut()\n    let stateTemp = JSON.parse(JSON.stringify(this.state))\n    stateTemp.user = {}\n    this.setState(stateTemp)\n  }\n  render(){\n    let todos = this.state.todoList\n      .filter((elem) => !elem.deleted)\n      .map((elem, index) => {\n      //return <li>{todo.title}</li>\n      return (\n        <li key={index}>\n          <TodoItem todo={elem} onToggle={this.toggle.bind(this)}\n            onDelete={this.delete.bind(this)}/>\n        </li>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username||'我'}的待办\n          {this.state.user.id ? <button onClick={this.onSignOut.bind(this)}>登出</button> : null}\n        </h1>\n        <div className=\"InputWrapper\">\n          <TodoInput content={this.state.newTodo}\n            onSubmit={this.addTodo.bind(this)}\n            onChange={this.changeTitle.bind(this)}/>\n        </div>\n        <ol className=\"todoList\">\n          {todos}\n        </ol>\n        {this.state.user.id ? \n          null : \n          <UserDialog onSignUp={this.onSignUpOrSignIn.bind(this)}\n            onSignIn={this.onSignUpOrSignIn.bind(this)}/>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\nlet id = 0\n\nfunction idMaker(){\n  id += 1\n  return id\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}